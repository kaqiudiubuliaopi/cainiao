#include <iostream>
#include <math.h>
using namespace std;
class tringle_demo
{
public:
	bool juage_tringle(float a, float b, float c);
	double girth(float a, float b, float c);
	double area(float a, float b, float c);
	void judge_class(float a, float b, float c);
	void tringle_set(float a, float b, float c);
	void Display( );
private:float a;
		float b;
		float c;
};

/*----------------------------------*
		 Class Definition
*-----------------------------------*/
bool tringle_demo::juage_tringle(float a, float b, float c)
{
	if (a + b < c&&a + c < b&&b + c < a)
		return false;
	else return true;
}
double tringle_demo::girth(float a, float b, float c)
{
	double m;
	m = a + b + c;
	return m;
}
double tringle_demo::area(float a, float b, float c)
{
	double n;
	n = sqrt((a + b + c)*(a + b - c)*(a + c - b)*(b + c - a));
	return n;
}
void tringle_demo::judge_class(float a, float b, float c)
{
	int t;
	if (a < b)
	{
		t = a;
		a = b;
		b = t;
	}
	if (a < c)
	{
		t = a;
		a = c;
		c = t;
	}
	if (b*b + c * c < a*a)
		cout << "三角形为钝角三角形";
	else if (b*b + c * c == a * a)
		cout << "三角形为直角三角形";
	else if (b*b + c * c > a*a)
		cout << "三角形为锐角三角形";
}
void tringle_demo::tringle_set(float a, float b, float c)
{
	this->a = a;
	this->b = b;
	this->c = c;
}
void tringle_demo::Display()
{
	cout << "a边长的存储地址:" << &a << endl;
	cout << "b边长的存储地址:" << &b << endl;
	cout << "c边长的存储地址:" << &c << endl;

}


/*----------------------------------*
		  Main Function
*-----------------------------------*/

int main()
{
	tringle_demo t,h;
	float a, b, c;
	double m, n;
	cout << "t的地址:" << &t << endl;
	t.Display();
	cout << "h的地址:" << &h << endl;
	h.Display();
	cout << "存储大小" << sizeof(t)<<endl;
	cout << "请输入三角形的三边长：" << endl;
	cin >> a >> b >> c;
	cout << "是否为三角形" << t.juage_tringle(a, b, c) << endl;
	m = t.girth(a, b, c);
	cout << "三角形的周长" << m << endl;
	n = t.area(a, b, c);
	cout << "三角形的面积为" << n << endl;
	t.judge_class(a, b, c);
	system("pause");

	return 0;


}
